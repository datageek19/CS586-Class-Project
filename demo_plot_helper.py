import matplotlib.pyplot as plt
import numpy as np

tf_train_loss = {}
tf_test_loss = {}
with open('size-20M.log', 'r') as file:
    iter = 1
    i = 1
    for line in file:
        if i % 2 == 1:
            line = line.split('|')[1]
            line = float(line.replace("Train Loss: ", ""))
            tf_train_loss[iter] = line
        else:
            line = line.split('|')[1]
            line = float(line.replace("Test  Loss: ", ""))
            tf_test_loss[iter] = line
            iter += 1
        i += 1

#print(tf_train_loss.values())
#print(tf_test_loss.values())

epochs = range(1, 51)
# C# Train Loss in 50 Epochs, ~60s per epoch
cs_loss = [1.11898974609375, 0.504269653320312, 0.395708129882813, 0.335024261474609, 0.293223724365234, 0.261924194335938, 0.237655487060547, 0.218366134643555, 0.202596160888672, 0.189925918579102, 0.178370178222656, 0.168332656860352, 0.160474334716797, 0.153653518676758, 0.147071426391602, 0.141640625, 0.136792068481445, 0.132845932006836, 0.128911636352539, 0.124887222290039, 0.121858062744141, 0.118886299133301, 0.116081825256348, 0.11357048034668, 0.111425018310547, 0.109386741638184, 0.106987724304199, 0.105347694396973, 0.103544723510742, 0.101966697692871, 0.100522766113281, 0.0991875152587891, 0.0977923355102539, 0.0962695617675781, 0.0952405776977539, 0.0941733703613281, 0.0931077041625977, 0.0919208374023437, 0.0909454040527344, 0.0902716293334961, 0.0892609939575195, 0.0885543212890625, 0.0877673034667969, 0.0871119842529297, 0.0861257705688477, 0.0852307739257813, 0.0846356658935547, 0.0838711013793945, 0.0835793838500977, 0.083037956237793]

# TF Train/Test Loss in 50 Epochs, ~28.75s per epoch
tf_train_loss = [0.6, 0.462, 0.398, 0.35, 0.315, 0.286, 0.261, 0.244, 0.228, 0.211, 0.198, 0.187, 0.174, 0.162, 0.154, 0.145, 0.134, 0.127, 0.124, 0.117, 0.11, 0.105, 0.1, 0.096, 0.092, 0.086, 0.084, 0.08, 0.077, 0.074, 0.072, 0.07, 0.068, 0.065, 0.063, 0.062, 0.059, 0.058, 0.056, 0.055, 0.055, 0.052, 0.051, 0.05, 0.048, 0.047, 0.046, 0.045, 0.045, 0.043]
tf_test_loss = [0.687, 0.595, 0.563, 0.543, 0.533, 0.525, 0.524, 0.525, 0.526, 0.531, 0.533, 0.534, 0.538, 0.544, 0.543, 0.552, 0.548, 0.552, 0.557, 0.56, 0.565, 0.565, 0.571, 0.579, 0.575, 0.583, 0.583, 0.589, 0.596, 0.596, 0.6, 0.606, 0.607, 0.613, 0.613, 0.616, 0.621, 0.621, 0.628, 0.624, 0.63, 0.633, 0.638, 0.641, 0.642, 0.648, 0.649, 0.657, 0.658, 0.658]

# TF Train/Test Loss in 50 Epochs,
# 18 times bigger training set,
# 2 times bigger test set,
# ~650s per epoch
tf_train_loss_large20 = [0.304, 0.256, 0.231, 0.213, 0.199, 0.188, 0.179, 0.172, 0.167, 0.162, 0.157, 0.153, 0.149, 0.146, 0.142, 0.139, 0.137, 0.134, 0.132, 0.13, 0.128, 0.126, 0.124, 0.122, 0.121, 0.12, 0.118, 0.117, 0.115, 0.114, 0.113, 0.111, 0.11, 0.111, 0.108, 0.108, 0.107, 0.106, 0.105, 0.104, 0.103, 0.103, 0.102, 0.101, 0.102, 0.1, 0.099, 0.099, 0.098, 0.098]
tf_test_loss_large20 = [0.347, 0.306, 0.285, 0.271, 0.261, 0.252, 0.246, 0.241, 0.237, 0.234, 0.231, 0.228, 0.225, 0.223, 0.221, 0.219, 0.217, 0.215, 0.214, 0.212, 0.211, 0.21, 0.209, 0.208, 0.207, 0.207, 0.205, 0.205, 0.203, 0.203, 0.202, 0.201, 0.2, 0.201, 0.2, 0.199, 0.198, 0.198, 0.197, 0.197, 0.196, 0.196, 0.196, 0.195, 0.196, 0.195, 0.195, 0.194, 0.194, 0.194]

tf_train_loss_large20_dense = [0.3067, 0.2533, 0.2252, 0.2075, 0.1934, 0.1829, 0.1743, 0.1674, 0.1609, 0.1554, 0.1506,0.1462,0.1419,0.1386,0.1353,0.1328,0.1303,0.1281,0.1259,0.1238,0.1215,0.1198,0.1180,0.1166,0.1150,0.1136,0.1121,0.1108,0.1097,0.1088,0.1076,0.1066,0.1056,0.1046,0.1038,0.1030,0.1023,0.1016,0.1009,0.1002,0.09948,0.09874,0.09810,0.09745,0.09692,0.09639,0.09585,0.09539,0.09491,0.09435]
tf_test_loss_large20_dense = [0.3518, 0.3054, 0.2827, 0.2692, 0.2586, 0.2507, 0.2444, 0.2395, 0.2349, 0.2312,0.2279,0.2245,0.2215,0.2194,0.2174,0.2157,0.2139,0.2122,0.2107, 0.2093, 0.2080,0.2071,0.2060,0.2052,0.2046,0.2039,0.2027,0.2020,0.2014,0.2007,0.2002,0.1997,0.1991,0.1987,0.1981,0.1978,0.1974,0.1972,0.1968,0.1964,0.1959, 0.1956, 0.1952, 0.1949, 0.1945, 0.1945, 0.1942, 0.1938, 0.1939, 0.1934]

#print (len(tf_test_loss_large20_dense))
#print (len(tf_train_loss_large20_dense))
# TF_Dist Train/Test Loss in 50 Epoch (Local GPU, 1 remote CPU), ~31.25s per epoch
# !TODO Distributed Version not working properly
tf_train_loss_dist_lg1r = [0.179, 0.163, 0.15, 0.141, 0.131, 0.123, 0.117, 0.11, 0.106, 0.099, 0.094, 0.091, 0.086, 0.082, 0.08, 0.076, 0.074, 0.071, 0.069, 0.066, 0.064, 0.062, 0.061, 0.057, 0.057, 0.055, 0.053, 0.053, 0.05, 0.05, 0.048, 0.047, 0.045, 0.044, 0.044, 0.042, 0.043, 0.046, 0.041, 0.039, 0.039, 0.037, 0.037, 0.036, 0.036, 0.035, 0.035, 0.034, 0.033, 0.033]
tf_test_loss_dist_lg1r = [0.538, 0.551, 0.561, 0.572, 0.576, 0.584, 0.591, 0.599, 0.602, 0.61, 0.61, 0.621, 0.62, 0.625, 0.631, 0.634, 0.635, 0.639, 0.643, 0.643, 0.647, 0.65, 0.653, 0.656, 0.659, 0.659, 0.66, 0.667, 0.666, 0.669, 0.67, 0.675, 0.675, 0.679, 0.681, 0.681, 0.685, 0.676, 0.686, 0.687, 0.69, 0.691, 0.696, 0.695, 0.701, 0.7, 0.705, 0.704, 0.709, 0.71]

# TF_Dist Train/Test Loss in 50 Epoch (Local GPU, 2 remote CPUs), ~31.8s per epoch
# !TODO Distributed Version not working properly
tf_train_loss_dist_lg2r = [0.116, 0.086, 0.073, 0.067, 0.06, 0.055, 0.051, 0.048, 0.046, 0.044, 0.043, 0.041, 0.04, 0.038, 0.037, 0.036, 0.036, 0.034, 0.034, 0.033, 0.032, 0.032, 0.031, 0.031, 0.03, 0.029, 0.029, 0.028, 0.028, 0.027, 0.027, 0.027, 0.026, 0.026, 0.025, 0.025, 0.025, 0.024, 0.024, 0.024, 0.023, 0.029, 0.027, 0.023, 0.022, 0.022, 0.023, 0.022, 0.022, 0.021]
tf_test_loss_dist_lg2r = [0.599, 0.61, 0.625, 0.638, 0.646, 0.658, 0.663, 0.67, 0.672, 0.679, 0.683, 0.687, 0.693, 0.697, 0.699, 0.704, 0.705, 0.713, 0.711, 0.719, 0.718, 0.722, 0.724, 0.729, 0.729, 0.732, 0.735, 0.736, 0.74, 0.741, 0.746, 0.742, 0.75, 0.749, 0.751, 0.753, 0.756, 0.756, 0.761, 0.758, 0.763, 0.736, 0.748, 0.759, 0.767, 0.769, 0.766, 0.768, 0.769, 0.776]

plt.subplot(1, 2, 1)
plt.grid()
plt.plot(epochs, cs_loss, '-', color= (0, 0, 0, 1),linewidth=2, label='C#')
plt.plot(epochs, tf_train_loss, 'b-', linewidth=2, label='TF-Small')
plt.plot(epochs, tf_train_loss_large20, 'r-', linewidth=2, label='TF-Large')
plt.plot(epochs, tf_train_loss_large20_dense, 'g-', linewidth=2, label='TF-Large(Reduced)')

plt.plot(epochs, tf_test_loss, 'b--', linewidth=2)
plt.plot(epochs, tf_test_loss_large20, 'r--', linewidth=2)
plt.plot(epochs, tf_test_loss_large20_dense, 'g--', linewidth=2)
#plt.plot(epochs, tf_train_loss_dist_lg1r, 'r-', linewidth=2, label='Local(g):1Remote')
#plt.plot(epochs, tf_train_loss_dist_lg2r, 'c-', linewidth=2, label='Local(g):2Remote')
plt.xlabel("Epoch")
plt.ylabel("Loss")
plt.title("Loss")
plt.legend()


# plt.subplot(2,2,2)
# plt.plot(epochs, tf_test_loss, 'b--', linewidth=2, label='L(g):0R')
# #plt.plot(epochs, tf_test_loss_dist_lg1r, 'r--', linewidth=2, label='L(g):1R')
# #plt.plot(epochs, tf_test_loss_dist_lg2r, 'c--', linewidth=2, label='L(g):2R')
# plt.xlabel("Epoch")
# plt.ylabel("Loss")
# plt.title("Test Loss")
# plt.ylim(0, 1.2)

plt.subplot(1, 2, 2)
plt.grid(axis='y')
barwidth = 0.3
COUNT = 4
x = np.arange(COUNT) + 1 - barwidth / 2
time = [50, 28.75, 660/18.0, 676.49/18.0]

barlist = plt.bar(x, time, barwidth)
barlist[0].set_color((0, 0, 0, 0.8))
barlist[1].set_color('b')
barlist[2].set_color('r')
barlist[3].set_color('g')

plt.xticks(x + barwidth / 2, ('C#', 'TF-Small', 'TF-Large', 'TF-Large(Reduced)'))
plt.title('Train Time')
plt.ylabel("Training Time Per 1M Queries (s)")
plt.xlim(0.5, COUNT + 0.5)
plt.ylim(0, 60)

plt.tight_layout()
plt.show()